 
    - pause:
        prompt: "What region whould you like to deploy to?"
        echo: yes
      register: result1
    - set_fact:
        region: "{{result1.user_input}}"
    - debug:
        var: region
   
    - pause:
        prompt: "What would you like to name the build"
        echo: yes
      register: result2
    - set_fact:
        build: "{{result2.user_input}}"
    - debug:
        var: build
   
    - pause:
        prompt: "What is the imageid?"
        echo: yes
      register: result3
    - set_fact:
        imageid: "{{result3.user_input}}"
    - debug:
        var: imageid
   
    - pause:
        prompt: "What instance type would you like to use?"
        echo: yes
      register: result4
    - set_fact:
        type: "{{result4.user_input}}"
    - debug:
        var: type

    - pause:
        prompt: "What ssh key would you like to use?"
        echo: yes
      register: result5
    - set_fact:
        keyname: "{{result5.user_input}}"
    - debug:
        var: keyname

    - pause:
        prompt: "What VPC Subnet would you like to use?"
        echo: yes
      register: result6
    - set_fact:
        subnet: "{{result6.user_input}}"
    - debug:
        var: subnet

    - pause:
        prompt: "What security group would you like to use?"
        echo: yes
      register: result7
    - set_fact:
        sg: "{{result7.user_input}}"
    - debug:
        var: sg

    - name: Setup an Ec2 instance 
      amazon.aws.ec2_instance:
        aws_profile: "{{region}}"
        name: "{{build}}"
        image_id: "{{imageid}}"
        instance_type: "{{type}}"
        key_name: "{{keyname}}"
        vpc_subnet_id: "{{subnet}}"
        security_group: "{{sg}}"
        network:
          assign_public_ip: true
        wait: yes
        tags:
          Environment: 
      register: instance
    - debug: var=instance

    - name: Check If instance was depoyed. 
      shell: sudo aws ec2 describe-instances --query 'Reservations[].Instances[].[State.Name, InstanceId, ImageId, InstanceType, PublicIpAddress, SubnetId, VpcId,Tags[?Key==`Name`]| [0].Value]'
      register: aws_check
    - debug: var=aws_check.stdout